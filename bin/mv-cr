#!/bin/bash

SHELL=/bin/bash

set -e

function usage() {
    echo "HELP!"
    # gh issue create --help
}

g_change=
g_from_project=
g_to_project=
g_update_plan=YES
g_tag=

POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        --change|-c)
            g_change="$2";
            shift 2;
        ;;
        --from-project|-f)
            g_from_project="$2";
            shift 2;
        ;;
         --to-project|-t)
            g_to_project="$2";
            shift 2;
        ;;
        --no-update-plan|-u)
            g_update_plan="NO";
            shift;
        ;;
        --tag)
            g_tag="$2";
            shift;
        ;;
        --*)
            echo "error: invalid option $1"
            usage
            exit 64 
        ;;
        *)
            POSITIONAL+=("$1")
            shift
        ;;
    esac
done

set -- "${POSITIONAL[@]}" # restore positional parameters

if [ -z "$g_from_project" ] || [ -z "$g_to_project" ] || [ -z "$g_change" ]; then
    echo "error: missing required option --from-project, --to-project or --change"
    exit 64
fi

if [ ! -f "$g_from_project/sqitch.plan" ]; then
    echo "Project $g_from_project does not exist"
    exit 64
fi

if [ ! -f "$g_to_project/sqitch.plan" ]; then
    echo "Project $g_to_project does not exist"
    exit 64
fi

if [ ! -z "$g_tag" ]; then
    if ! [[ $g_tag =~ ^@([0-9]{4})\.([0-9]{2})$ ]]; then
        echo "Invalid tag: tags must conform to format \"@YYYY.MM\"."
        exit 64
    fi
    if ! grep -q "^$g_tag" "$g_to_project/sqitch.plan"; then
        echo "Tag \"$g_tag\" not found in $g_to_project/sqitch.plan"
        exit 64
    fi
fi

if [ ! -f "$g_from_project/deploy/${g_change}.sql" ]; then
    echo "Change $g_from_project/deploy/${g_change}.sql does not exist"
    exit 64
fi

for type in deploy revert verify; do
    mv "$g_from_project/$type/${g_change}.sql" "$g_to_project/$type/${g_change}.sql"
done

if [ "$g_update_plan" == "YES" ]; then

    if [ ! -z "$g_tag" ]; then
        cr_line=$(grep -e "$g_change" "$g_from_project/sqitch.plan")
        sed -i "/^$g_tag/ i\\$cr_line" "$g_to_project/sqitch.plan"
    else
        echo "" >> "$g_to_project/sqitch.plan"
        grep -e "$g_change" "$g_from_project/sqitch.plan" >> "$g_to_project/sqitch.plan"
    fi

    grep -v -e "$g_change" "$g_from_project/sqitch.plan" > "$g_from_project/sqitch.plan.tmp"
    mv -f "$g_from_project/sqitch.plan.tmp" "$g_from_project/sqitch.plan"

fi

echo "Change $g_change moved from $g_from_project to $g_to_project"
