#!/bin/bash

SHELL=/bin/bash

set -e

function usage() {
    echo "Usage: $0 --change|-c <change> --project|-f|-C|--plan-file <project> --note|-n <note> [--issue-id <issue-id>]"
    echo ""
    echo "Add new change-request to sqitch plan file, and optionally create a new Github issue."
    echo ""
    echo "  --change|-c <change>                   Name of change to add to sqitch plan file."
    echo "  --project|-f|-C|--plan-file <project>  Path to sqitch project directory."
    # echo "                                         Must be $(grep -v '^\#' projects.txt | grep -v '^[[:space:]]*$'))."
    echo "  --note|-n <note>                       Note to add to change."
    echo "  --issue-id <issue-id>                  Add URL to issue in CR's comment in plan files."
    echo "  --create-issue                         Create a new Github issue."
    echo "  --help|-h                              Show this help."
    echo ""
    echo "Most of sqitch options can also be used."
    # sqitch --no-pager
}

change=
project=
note=
today=$(date +%Y-%m-%d)
issue_id=
create_issue=NO
script_dir=$(cd "$( dirname "${BASH_SOURCE[0]}")" && pwd )

POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        --change|-c)
            change="$2";
            shift 2;
        ;;
        --project|-f|-C|--plan-file)
            project="$2";
            shift 2;
        ;;
        --note|-n)
            note="$2";
            shift 2;
        ;;
        --issue-id)
            issue_id="$2";
            shift 2;
        ;;
        --create-issue)
            create_issue="YES";
            shift;
        ;;
        --help|-h)
            usage;
            exit 0;
        ;;
        --*)
            echo "error: invalid option $1"
            usage
            exit 64 
        ;;
        *)
            POSITIONAL+=("$1") # save it in an array for later
            shift
        ;;
    esac
done

set -- "${POSITIONAL[@]}" # restore positional parameters

if [ -z "$change" ] || [ -z "$project" ] || [ -z "$note" ]; then
    usage
    exit 64
fi

if [ ! -f "$project/sqitch.plan" ]; then
    echo "Project $project does not exist"
    exit 64
fi

if [ -z "$issue_id" ] && [ "$create_issue" == "YES" ]; then

    issue_body=$(cat <<EOF

Change project: [$project](https://github.com/humlab-sead/sead_change_control/blob/master/${project}/sqitch.plan)
Change request: [$change](https://github.com/humlab-sead/sead_change_control/blob/master/${project}/deploy/${change}.sql)

$note

EOF
)
    echo $issue_body

    issue_url=$(gh issue create \
        --title "$change" \
        --body "$issue_body" \
        --label "change-request" \
        --assignee @me,roger-mahler \
    )
    
    issue_id=$(basename "$issue_url")
    echo "info: new issue ${issue_id} created ($issue_url)"

elif [ -n "$issue_id" ]; then
    
    gh issue comment $issue_id --body "Change request: [$change](https://github.com/humlab-sead/sead_change_control/blob/master/${project}/deploy/${change}.sql)."
    
fi

note="# https://github.com/humlab-sead/sead_change_control/issues/${issue_id}: $note"

sqitch add "$change" --set today="$today" -C $project -n "$note" "${POSITIONAL[@]}"

$script_dir/update-cr-header --change $change --project $project
