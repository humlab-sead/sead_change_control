#!/bin/bash

SHELL=/bin/bash

set -e

function usage() {
    sqitch --no-pager
}

change=
project=
note=
today=$(date +%Y-%m-%d)
issue_id=
create_issue=NO

POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        --change|-c)
            change="$2";
            shift 2;
        ;;
        --project|-f|-C|--plan-file)
            project="$2";
            shift 2;
        ;;
        --note|-n)
            note="$2";
            shift 2;
        ;;
        --issue-id)
            issue_id="$2";
            shift 2;
        ;;
        --create-issue)
            create_issue="YES";
            shift;
        ;;
        *)
            POSITIONAL+=("$1") # save it in an array for later
            shift
        ;;
    esac
done

set -- "${POSITIONAL[@]}" # restore positional parameters

if [ -z "$change" ] || [ -z "$project" ] || [ -z "$note" ]; then
    usage
    exit 64
fi

if [ ! -f "$project/sqitch.plan" ]; then
    echo "Project $project does not exist"
    exit 64
fi

if [ -z "$issue_id" ] && [ "$create_issue" == "YES" ]; then

    issue_body=$(cat <<EOF

Project: $project

$note

EOF
)

    echo $issue_body

    issue_url=$(gh issue create \
        --title "$change" \
        --body "$issue_body" \
        --project "$project" \
        --label "change-request" \
        --assignee @me,roger-mahler \
    )

    issue_id=$(basename "@issue_url")

    note="#${issue_id}: $note"

elif [ -n "$issue_id" ]; then

    note="#${issue_id}: $note"

    gh issue comment $issue_id --body "Created CR [$change](https://github.com/humlab-sead/sead_change_control/blob/master/$project/deploy/${change}.sql)."
    

fi

sqitch add "$change" --set today="$today" -C $project -n "$note" "${POSITIONAL[@]}"

