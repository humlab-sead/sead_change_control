#!/bin/bash

SHELL=/bin/bash

set -e

function usage() {
    echo "HELP!"
    # gh issue create --help
}

g_change=
g_project=

POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        --change|-c)
            g_change="$2";
            shift 2;
        ;;
        --project|-p)
            g_project="$2";
            shift 2;
        ;;
        --*)
            echo "error: invalid option $1"
            usage
            exit 64 
        ;;
        *)
            POSITIONAL+=("$1")
            shift
        ;;
    esac
done

set -- "${POSITIONAL[@]}" # restore positional parameters

if [ -z "$g_project" ] || [ -z "$g_change" ]; then
    echo "error: missing required option --project or --change"
    exit 64
fi

if [ "$g_project" != "ALL" ] && [ ! -f "$g_project/sqitch.plan" ]; then
    echo "Project $g_project does not exist"
    exit 64
fi

function update_header(){
    local project=$1
    local change=$2

    change="${change##*/}"
    change="${change%.*}"

    if [ ! -f "$project/deploy/${change}.sql" ]; then
        echo "Change $project/deploy/${change}.sql does not exist"
        exit 64
    fi

    for type in deploy revert verify ; do
        local filename="$project/$type/$change.sql"
        echo "Updating $filename"
        if [ ! -f $filename ]; then
            echo "Change $filename does not exist"
            exit 64
        fi
        echo "-- ${type^} $project: $change" > /tmp/$change.sql
        grep -v -i -e "^-- ${type}" $filename >> /tmp/$change.sql ;
        mv -f /tmp/$change.sql $filename
    done

}

if [ "$g_project" == "ALL" ] && [ "$g_change" == "ALL" ]; then
    projects=$(grep -v '^#' ./projects.txt | grep -v '^[[:space:]]*$')
    for project in ${projects} ; do
        if [ "$(ls $project/deploy/*.sql 2>/dev/null)" == "" ]; then
            echo "Project $project does not have any CRs"
            continue
        fi
        for change in $(ls $project/deploy/*.sql); do
            update_header $project $change
        done
    done
elif [ "$g_change" == "ALL" ]; then
    for change in $(ls $g_project/deploy/*.sql); do
        update_header $g_project $change
    done
else
    update_header $g_project $g_change
fi