#!/bin/bash
##################################################################################################################
# This script copies a table from one database to another
##################################################################################################################

set -e

export PGCLIENTENCODING=UTF8

dothostfile=~/vault/.default.sead.server
dotuserfile=~/vault/.default.sead.username

g_host=$(dnsdomainname -A)

g_target_database=
g_target_schema=
g_source_database=
g_source_table=

if [[ -f "$dothostfile" ]]; then
    g_host=`cat $dothostfile`
fi
if [[ -f "$dotuserfile" ]]; then
    g_user=`cat $dotuserfile`
fi

usage_message=$(cat <<EOF
usage: deploy_staging OPTIONS...

    --host SERVERNAME               Target server (${g_host})
    --user USERNAME                 User on target server (${g_user})
    --target-database DBNAME        Target database name. Mandatory.
    --source-database DBNAME        Name of source database
    --source-table DBNAME           Name of source table

EOF
)

POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        --host)
            g_host="$2"; shift; shift
        ;;
        --user)
            g_user="$2"; shift; shift
        ;;
        --target-database)
            g_target_database="$2"; shift; shift
        ;;
        --source-database)
            g_source_database="$2";
            shift; shift
        ;;
        --source-table)
            g_source_table="$2";
            shift; shift
        ;;
        --target-schema)
            g_target_schema="$2";
            shift; shift
        ;;
        *)
            POSITIONAL+=("$1") # save it in an array for later
            shift
        ;;
    esac
done

function usage() {
    echo "$usage_message"
}

set -- "${POSITIONAL[@]}" # restore positional parameters

if [ "${g_source_database}" == "" ]; then
    echo "error: source database name not specified"
    usage
    exit 64
fi

if [ "${g_source_table}" == "" ]; then
    echo "error: source table name not specified"
    usage
    exit 64
fi

if [ "${g_target_database}"  == "" ]; then
    echo "error: target ${g_target_database} not specified"
    usage
    exit 64
fi

echo "info: copying table ${g_source_table} from ${g_source_database} into ${g_target_database}...";

function dbexec() {
    p_db=$1
    p_sql=$2
    psql -v ON_ERROR_STOP=1 --host=$g_host --username=$g_user --no-password --dbname=$p_db --command "$p_sql"
    if [ $? -ne 0 ];  then
        echo "fatal: psql command failed! Deploy aborted." >&2
        exit 64
    fi
}

dbexec $g_target_database "drop table if exists \"$g_source_table\";"

pg_dump --host=$g_host --username=$g_user --dbname=$g_source_database --quote-all-identifiers --no-tablespaces --table=\"$g_source_table\" \
    | psql  --host=$g_host --username=$g_user --dbname=$g_target_database

if [ "$g_target_schema" != "" ]; then

    dbexec $g_target_database "create schema if not exists $g_target_schema;"
    dbexec $g_target_database "drop table if exists $g_target_schema.\"$g_source_table\";"
    dbexec $g_target_database "alter table \"$g_source_table\" set schema $g_target_schema ;"

fi
