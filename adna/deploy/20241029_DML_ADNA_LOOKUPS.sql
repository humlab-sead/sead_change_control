-- Deploy adna: 20241029_DML_ADNA_LOOKUPS

/****************************************************************************************************************
  Author        Roger Mähler
  Date          2024-10-29
  Description   Lookups for aDNA test data
  Issue         https://github.com/humlab-sead/sead_change_control/issues/318
  Prerequisites 
  Reviewer      
  Approver      
  Idempotent    Yes
  Notes
*****************************************************************************************************************/

begin;
do $$
    declare v_new_method_id int;
    declare v_submission_identifier text;
    declare v_change_request_identifier text;
begin

    v_submission_identifier = 'adna_pilot_lookup_import_oct_2024.xlsx';
    v_change_request_identifier = '20241029_DML_ADNA_LOOKUPS';

    with new_data (system_id, alt_ref_type, description, alt_ref_type_id) as (
        values
            ('1', 'Sequence Library ID', 'Sequence library ID code (generated by ADU). Identifies one of multiple possible libraries generated for a DNA sample.', NULL),
            ('2', 'Associated DNA library ID', 'DNA library ID associated with a sample', NULL)
        )
        insert into tbl_alt_ref_types (alt_ref_type_id, alt_ref_type, description)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_alt_ref_types',
                    'alt_ref_type_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as alt_ref_type_id, alt_ref_type, description
            from new_data;

    with new_data (system_id, authors, year, title) as (
        values
            ('1', 'Caroline, A.A., Hedvall, R., Lundgren, M.', '2020', 'Ygle, Guve och Rane i Skänninge: DNA-analyser löste frågan om deras släktskap')
        )
        insert into tbl_biblio (biblio_id, authors, year, title)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_biblio',
                    'biblio_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as biblio_id, authors, year, title
            from new_data;

    with new_data (system_id, record_type_name, record_type_description, record_type_id) as (
        values
            ('1', 'DNA', 'Any type of DNA analysis (e.g. ancient humans or sedimentary)', NULL)
        )
        insert into tbl_record_types (record_type_id, record_type_name, record_type_description)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_record_types',
                    'record_type_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as record_type_id, record_type_name, record_type_description
            from new_data;

    with new_data (system_id, contact_id, address_1, address_2, first_name, last_name, url, phone_number, email, location_id) as (
        values
            ('1', NULL, 'SciLifelab Ancient DNA, Norbyvägen 18 A, 752 36, Uppsala University, Uppsala', NULL, 'Magnus', 'Lundgren', 'https://www.scilifelab.se/units/ancient-dna/', NULL, 'magnus.lundgren@scilifelab.uu.se', '4233'),
            ('2', NULL, 'SciLifelab Ancient DNA, Norbyvägen 18 A, 752 36, Uppsala University, Uppsala', NULL, 'SciLifelab Ancient DNA', NULL, 'https://www.scilifelab.se/units/ancient-dna/', NULL, 'info@scilifelab.se', '4233'),
            ('3', NULL, 'Arkeologerna', NULL, 'Caroline', 'Arcini Ahlström', 'https://arkeologerna.com/', NULL, 'caroline.ahlstrom.arcini@arkeologerna.com', NULL),
            ('4', NULL, 'SciLifelab Ancient DNA, Norbyvägen 18 A, 752 36, Uppsala University, Uppsala', NULL, 'Thijessen', 'Naidoo', 'https://www.scilifelab.se/units/ancient-dna/', NULL, 'thijessen.naidoo@scilifelab.uu.se', '4233')
        )
        insert into tbl_contacts (contact_id, address_1, address_2, first_name, last_name, url, phone_number, email, location_id)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_contacts',
                    'contact_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as contact_id, address_1, address_2, first_name, last_name, url, phone_number, email, location_id::int
            from new_data;

    with new_data (system_id, master_name, master_notes, biblio_id, contact_id, url, master_set_id) as (
        values
            ('1', 'SciLifelab Ancient DNA', NULL, NULL, '2', 'https://www.scilifelab.se/units/ancient-dna/', NULL)
        )
        insert into tbl_dataset_masters (master_set_id, master_name, master_notes, biblio_id, contact_id, url)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_dataset_masters',
                    'master_set_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as master_set_id, master_name, master_notes, sead_utility.get_allocated_id(
                    v_submission_identifier, v_change_request_identifier, 'tbl_biblio', 'biblio_id', biblio_id::text
                ), sead_utility.get_allocated_id(
                    v_submission_identifier, v_change_request_identifier, 'tbl_contacts', 'contact_id', contact_id::text
                ), url
            from new_data;

    with new_data (system_id, location_name, location_type_id, default_lat_dd, default_long_dd, location_id) as (
        values
            ('1', 'Skänninge parish', '2', NULL, NULL, NULL)
        )
        insert into tbl_locations (location_id, location_name, location_type_id, default_lat_dd, default_long_dd)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_locations',
                    'location_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as location_id, location_name, location_type_id::int, default_lat_dd::numeric, default_long_dd::numeric
            from new_data;

    with new_data (system_id, biblio_id, method_name, method_abbrev_or_alt_name, description, method_group_id, record_type_id, unit_id, method_id) as (
        values
            ('1', NULL, 'Ancient DNA analysis', 'aDNA', 'Extraction and analysis of ancient DNA recovered from biological material (human, animal, plants, etc.)', '1', '1', NULL, NULL)
        )
        insert into tbl_methods (method_id, biblio_id, method_name, method_abbrev_or_alt_name, description, method_group_id, record_type_id, unit_id)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_methods',
                    'method_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as method_id, sead_utility.get_allocated_id(
                    v_submission_identifier, v_change_request_identifier, 'tbl_biblio', 'biblio_id', biblio_id::text
                ), method_name, method_abbrev_or_alt_name, description, method_group_id::int, sead_utility.get_allocated_id(
                    v_submission_identifier, v_change_request_identifier, 'tbl_record_types'::text, 'record_type_id'::text, record_type_id::text
                ), unit_id::int
            from new_data;

    with new_data (system_id, project_type_id, project_stage_id, project_name, project_abbrev_name, description, project_id) as (
        values
            ('1', '5', '7', 'SciLifeLab Ancient DNA Unit project 017', 'A017', 'Analysis of project A017, performed by the SciLifeLab Ancient DNA Unit on behalf of Caroline Arcini Ahlström, Arkeologerna.', NULL)
        )
        insert into tbl_projects (project_id, project_type_id, project_stage_id, project_name, project_abbrev_name, description)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_projects',
                    'project_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as project_id, project_type_id::int, project_stage_id::int, project_name, project_abbrev_name, description
            from new_data;

    with new_data (system_id, altitude, latitude_dd, longitude_dd, national_site_identifier, site_description, site_name, site_preservation_status_id, site_location_accuracy) as (
        values
            ('1', NULL, '58.398269', '15.082804', 'L2011:9764', NULL, 'Skänninge Abbey', NULL, 'Cultural Heritage site')
        )
        insert into tbl_sites (site_id, altitude, latitude_dd, longitude_dd, national_site_identifier, site_description, site_name, site_preservation_status_id, site_location_accuracy)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_sites',
                    'site_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as site_id, altitude::numeric, latitude_dd::numeric, longitude_dd::numeric, national_site_identifier, site_description, site_name, site_preservation_status_id::int, site_location_accuracy
            from new_data;

    with new_data (system_id, order_name, record_type_id, sort_order) as (
        values
            ('1', 'Primates', '15', NULL)
        )
        insert into tbl_taxa_tree_orders (order_id, order_name, record_type_id, sort_order)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_taxa_tree_orders',
                    'order_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as order_id, order_name, sead_utility.get_allocated_id(
                    v_submission_identifier, v_change_request_identifier, 'tbl_record_types'::text, 'record_type_id'::text, record_type_id::text
                ), sort_order::int
            from new_data;

    with new_data (system_id, family_name, order_id, family_id) as (
        values
            ('1', 'Hominidae', '1', NULL)
        )
        insert into tbl_taxa_tree_families (family_id, family_name, order_id)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_taxa_tree_families',
                    'family_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as family_id, family_name, sead_utility.get_allocated_id(
                    v_submission_identifier, v_change_request_identifier, 'tbl_taxa_tree_orders'::text, 'order_id'::text, order_id::text
                )
            from new_data;

    with new_data (system_id, family_id, genus_name, genus_id) as (
        values
            ('1', '1', 'Homo', NULL)
        )
        insert into tbl_taxa_tree_genera (genus_id, family_id, genus_name)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_taxa_tree_genera',
                    'genus_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as genus_id, sead_utility.get_allocated_id(
                    v_submission_identifier, v_change_request_identifier, 'tbl_taxa_tree_families'::text, 'family_id'::text, family_id::text
                ), genus_name
            from new_data;

    with new_data (system_id, author_id, genus_id, species, taxon_id) as (
        values
            ('1', NULL, '1', 'H. sapiens', NULL)
        )
        insert into tbl_taxa_tree_master (taxon_id, author_id, genus_id, species)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_taxa_tree_master',
                    'taxon_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as taxon_id, author_id::int, sead_utility.get_allocated_id(
                    v_submission_identifier, v_change_request_identifier, 'tbl_taxa_tree_genera'::text, 'genus_id'::text, genus_id::text
                ), species
            from new_data;

    with new_data (system_id, system_description, system_name) as (
        values
            ('1', 'National Center for Biotechnology Information (NCBI) Taxonomy Database with classification and nomenclature for all organisms in the public sequence databases.', 'NCBI taxonomy')
        )
        insert into tbl_taxonomic_order_systems (taxonomic_order_system_id, system_description, system_name)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_taxonomic_order_systems',
                    'taxonomic_order_system_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as taxonomic_order_system_id, system_description, system_name
            from new_data;

    with new_data (system_id, taxon_id, taxonomic_code, taxonomic_order_system_id) as (
        values
            ('1', '1', '9606', NULL, '1')
        )
        insert into tbl_taxonomic_order (taxonomic_order_id, taxon_id, taxonomic_code, taxonomic_order_system_id)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_taxonomic_order',
                    'taxonomic_order_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as taxonomic_order_id, sead_utility.get_allocated_id(
                    v_submission_identifier, v_change_request_identifier, 'tbl_taxa_tree_master'::text, 'taxon_id'::text, taxon_id::text
                ), taxonomic_code::numeric, sead_utility.get_allocated_id(
                    v_submission_identifier, v_change_request_identifier, 'tbl_taxonomic_order_systems'::text, 'taxonomic_order_system_id'::text, taxonomic_order_system_id::text
                )
            from new_data;

    with new_data (system_id, unit_id, data_type_id, name, base_type, precision, description, value_type_id) as (
        values
            ('3', null, '19', 'Molecular sex', 'category', null, 'Molecular sex', null),
            ('5', null, '19', 'Damage treatment', 'category', null, 'Type of damage treatment', null),
            ('6', null, '19', 'SNP capture', 'category', null, 'Type of SNP capture.', null),
            ('8', null, '19', 'Library preparation', 'category', null, 'Type of sequence library preparation', null)
        )
        insert into tbl_value_types (value_type_id, unit_id, data_type_id, name, base_type, precision, description)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_value_types',
                    'value_type_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as value_type_id, unit_id::int, data_type_id::int, name, base_type, precision::integer, description
            from new_data;

    with new_data (system_id, method_id, name, description, value_type_id, parent_id, value_class_id) as (
        values
            ('1', '1', 'Organism genome mapped to', 'Organism whose reference sequence / genome assembly was used for sequence alignment.', '9', null, null),
            ('2', '1', 'Reference genome assembly', 'reference sequence / genome assembly name or accession code.', '9', null, null),
            ('3', '1', 'Endogenous reads (filtered)', 'The number of sequence reads which have successfully mapped to the organism reference sequence after filtering.', '1', null, null),
            ('4', '1', 'Average read length', 'The average length of mapped sequence reads, excluding reads shorter than 35 bases and reads with less than 90% consensus to the species reference.', '7', null, null),
            ('5', '1', 'Average depth of coverage - genome (x)', 'The number of times on average that a given nucleotide in the genome has been sequenced.', '7', null, null),
            ('6', '1', 'Breadth of coverage - genome (%)', 'The percentage of the reference sequence / genome assembly covered after alignment.', '4', null, null),
            ('7', '1', 'Average depth of coverage - mtDNA (x)', 'The number of times on average that a given nucleotide in the mitochondrial genome has been sequenced.', '7', null, null),
            ('8', '1', 'mtDNA reads', 'The number of sequence reads which have successfully mapped to the mitochondrial DNA in the reference sequence.', '2', null, null),
            ('9', '1', 'X chromosome reads', 'The number of sequence reads which have successfully mapped to the X chromosome in the reference sequence.', '2', null, null),
            ('10', '1', 'Y chromosome reads', 'The number of sequence reads which have successfully mapped to the Y chromosome in reference sequence.', '1', null, null),
            ('11', '1', 'Molecular sex - Ry', 'Prediction of molecular sex of individual. Ry is based on the ratio of reads aligning to the X and Y chromosomes.', '3', null, null),
            ('12', '1', 'Molecular sex - Rx', 'Prediction of molecular sex of individual. Rx is based on the ratio of reads aligning to the X chromosome and autosomes.', '3', null, null),
            ('13', '1', 'mtDNA haplogroup', 'Prediction of mitochondrial DNA haplogroup.', '9', null, null),
            ('14', '1', 'Y haplogroup', 'Prediction of Y chromosome haplogroup.', '9', null, null),
            ('15', '1', '1st deg. relatives', 'List of sample IDs that are 1st degree relatives to the analysed individual.', '9', null, null),
            ('16', '1', '2nd deg. relatives', 'List of sample IDs that are 2nd degree relatives to the analysed individual.', '9', null, null),
            ('17', '1', '>2nd deg. relatives', 'List of sample IDs that are further than 2nd degree relatives to the analysed individual.', '9', null, null),
            ('18', '1', 'Library preparation(s)', 'Type of sequence library preparation (e.g. blunt-end, single-stranded, etc.).', '8', null, null),
            ('19', '1', 'Damage treatment(s)', 'Type of damage treatment if applicable (e.g. UDG).', '5', null, null),
            ('20', '1', 'SNP capture', 'Type of SNP capture if applicable (e.g. 1240k).', '6', null, null),
            ('21', '1', 'Metagenomics analysis', 'Record of whether the library been subjected to a metagenomic analysis.', '10', null, null),
            ('22', '1', 'General library file name', 'General file name suffix for library DNA sequence fastq files, BAM files, etc.', '9', null, null),
            ('23', '1', 'Merged reads', 'The total number of merged sequence reads retained following adapter removal and merging of read pairs.', '1', null, null),
            ('24', '1', 'Endogenous reads (raw)', 'The number of sequence reads which have successfully mapped to the organism reference sequence before filtering.', '2', null, null),
            ('25', '1', 'Raw endogenous content (%) ', 'The number of sequence reads which have successfully mapped to the organism reference sequence after filtering.', '4', null, null),
            ('26', '1', 'Duplicate reads (%)', 'The percentage of mapped sequence reads that are PCR duplicates i.e. they have identical start and end positions.', '4', null, null),
            ('27', '1', 'Short reads (%)', 'The percentage of mapped sequence reads that are shorter than 35 bases.', '4', null, null),
            ('28', '1', '5’ damage', 'Proportion of T nucleotides (given C nucleotide in reference) at the 5’ end of sequence reads. Representative of damage to DNA due to deamination of cytosines.', '7', null, null),
            ('29', '1', '3’ damage', 'Proportion of A nucleotides (given G nucleotide in reference) at the 3’ end of sequence reads. Representative of damage to DNA due to deamination of cytosines on complementary strand.', '7', null, null),
            ('30', '1', 'Methods metadata download link', 'Link to methods metadata worksheet (with lab and bioinformatics methods, tools, parameters, etc.).', '10', null, null)
        )
        insert into tbl_value_classes (value_class_id, method_id, name, description, value_type_id, parent_id)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_value_classes',
                    'value_class_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as value_class_id, sead_utility.get_allocated_id(
                    v_submission_identifier, v_change_request_identifier, 'tbl_methods'::text, 'method_id'::text, method_id::text
                ), name, description, coalesce(sead_utility.get_allocated_id(
                    v_submission_identifier, v_change_request_identifier, 'tbl_value_types'::text, 'value_type_id'::text, value_type_id::text
                ), value_type_id::int), parent_id::int
            from new_data;

    with new_data (system_id, value_type_id, name, description, value_type_item_id) as (
        values
            ('1', '3', 'XX', 'Female (XX)', NULL),
            ('2', '3', 'XY', 'Male (XY)', NULL),
            ('3', '5', 'NO', 'No treatment', NULL),
            ('4', '5', 'UDG', 'Uracil-DNA Glycosylase (UDG) Treatment', NULL),
            ('5', '6', 'NO', 'NO', NULL),
            ('6', '8', '1240k', '1240k', NULL)
        )
        insert into tbl_value_type_items (value_type_item_id, value_type_id, name, description)
            select
                sead_utility.allocate_system_id(
                    v_submission_identifier,
                    v_change_request_identifier,
                    'tbl_value_type_items',
                    'value_type_item_id',
                    new_data.system_id::text,
                    row_to_json(new_data.*)::jsonb
                ) as value_type_item_id, sead_utility.get_allocated_id(
                    v_submission_identifier, v_change_request_identifier, 'tbl_value_types'::text, 'value_type_id'::text, value_type_id::text
                ), name, description
            from new_data;

end $$;
commit;
